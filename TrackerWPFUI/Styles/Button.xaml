<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colour.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <!--#region Window Button Style -->
    <Style TargetType="{x:Type Button}" x:Key="WindowButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource WindowButton}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="MinWidth" Value="46"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"
                                   Padding="1 -6 1 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TitleBarIcon" BasedOn="{StaticResource WindowButton}">
        <Setter Property="MinWidth" Value="30"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    
    <Style TargetType="{x:Type Button}" x:Key="StandardButton">
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="Background" Value="{StaticResource TitleBarBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledButtonForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>